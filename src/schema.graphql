type User {
  id: ID!
  username: String!
  email: String!
  bio: String
  following: [User!]!
  followers: [User!]!
  posts: [Post!]!
  likes: [Like!]!
  comments: [Comment!]!
  rooms: [Room!]!
  loginSecret: String
}

type Post {
  id: ID!
  location: String
  caption: String!
  user: User!
  files: [File!]!
  likes: [Like!]!
  comments: [Comment!]!
}

type Like {
  id: ID!
  user: User!
  post: Post!
}

type Comment {
  id: ID!
  text: String!
  user: User!
  post: Post!
}

type File {
  id: ID!
  url: String!
  post: Post!
}

type Room {
  id: ID!
  participants: [User!]!
  messages: [Message!]!
}

type Message {
  id: ID!
  text: String!
  from: User!
  to: User!
  room: Room!
}

type ToggleLikeResponse {
  ok: Boolean!
  error: String
}

type Mutation {
  toggleLike(postId: String!): ToggleLikeResponse!
  confirmSecret(secret: String!, email: String!): ConfirmSecretResponse!
  createAccount(username: String!, email: String!, bio: String): CreateAccountResponse!
  requestSecret(email: String, phoneNumber: String): Boolean!
}

type ConfirmSecretResponse {
  ok: Boolean!
  error: String
  token: String
}

type CreateAccountResponse {
  ok: Boolean!
  error: String
}

type Query {
  something: String!
}
